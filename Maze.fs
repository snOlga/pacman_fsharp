module Maze

let WALL = "H"

let EMPT = " "

let APPL = "."

let PLAYER_SYMBOL = "o"

let mazeMatrix =
    [| [| APPL; APPL; APPL; WALL; APPL; APPL; APPL; APPL; APPL; APPL; APPL; APPL; APPL; APPL; APPL; APPL; APPL; WALL; APPL; APPL; APPL|] 
       [| APPL; WALL; APPL; WALL; APPL; WALL; WALL; WALL; WALL; WALL; APPL; WALL; WALL; WALL; WALL; WALL; APPL; WALL; APPL; WALL; APPL|] 
       [| APPL; APPL; APPL; APPL; APPL; APPL; APPL; WALL; APPL; APPL; APPL; APPL; APPL; WALL; APPL; APPL; APPL; APPL; APPL; APPL; APPL|] 
       [| WALL; WALL; APPL; WALL; APPL; WALL; APPL; WALL; APPL; WALL; WALL; WALL; APPL; WALL; APPL; WALL; APPL; WALL; APPL; WALL; WALL|] 
       [| APPL; APPL; APPL; WALL; APPL; WALL; APPL; WALL; APPL; WALL; APPL; WALL; APPL; WALL; APPL; WALL; APPL; WALL; APPL; APPL; APPL|] 
       [| APPL; WALL; APPL; WALL; APPL; WALL; APPL; WALL; APPL; WALL; WALL; WALL; APPL; WALL; APPL; WALL; APPL; WALL; APPL; WALL; APPL|] 
       [| APPL; APPL; APPL; WALL; APPL; WALL; APPL; APPL; APPL; APPL; APPL; APPL; APPL; APPL; APPL; WALL; APPL; WALL; APPL; APPL; APPL|] 
       [| WALL; WALL; WALL; WALL; APPL; WALL; APPL; WALL; WALL; WALL; WALL; WALL; WALL; WALL; APPL; WALL; APPL; WALL; WALL; WALL; WALL|] 
       [| APPL; APPL; APPL; APPL; APPL; WALL; APPL; APPL; APPL; APPL; APPL; APPL; APPL; APPL; APPL; WALL; APPL; APPL; APPL; APPL; APPL|] 
       [| APPL; WALL; WALL; WALL; WALL; WALL; APPL; WALL; WALL; WALL; WALL; WALL; WALL; WALL; APPL; WALL; WALL; WALL; WALL; WALL; WALL|] 
       [| APPL; APPL; APPL; APPL; APPL; APPL; APPL; WALL; APPL; APPL; APPL; APPL; APPL; WALL; APPL; APPL; APPL; APPL; APPL; APPL; APPL|] 
       [| APPL; WALL; WALL; WALL; WALL; WALL; APPL; WALL; WALL; WALL; WALL; WALL; WALL; WALL; APPL; WALL; WALL; WALL; WALL; WALL; WALL|] 
       [| APPL; APPL; APPL; APPL; APPL; WALL; APPL; APPL; APPL; APPL; APPL; APPL; APPL; APPL; APPL; WALL; APPL; APPL; APPL; APPL; APPL|] 
       [| WALL; WALL; WALL; WALL; APPL; WALL; APPL; WALL; WALL; WALL; WALL; WALL; WALL; WALL; APPL; WALL; APPL; WALL; WALL; WALL; WALL|] 
       [| APPL; APPL; APPL; WALL; APPL; WALL; APPL; APPL; APPL; APPL; APPL; APPL; APPL; APPL; APPL; WALL; APPL; WALL; APPL; APPL; APPL|] 
       [| APPL; WALL; APPL; WALL; APPL; WALL; APPL; WALL; APPL; WALL; WALL; WALL; APPL; WALL; APPL; WALL; APPL; WALL; APPL; WALL; APPL|] 
       [| APPL; APPL; APPL; WALL; APPL; WALL; APPL; WALL; APPL; WALL; APPL; WALL; APPL; WALL; APPL; WALL; APPL; WALL; APPL; APPL; APPL|] 
       [| WALL; WALL; APPL; WALL; APPL; WALL; APPL; WALL; APPL; WALL; WALL; WALL; APPL; WALL; APPL; WALL; APPL; WALL; APPL; WALL; WALL|] 
       [| APPL; APPL; APPL; APPL; APPL; APPL; APPL; WALL; APPL; APPL; APPL; APPL; APPL; WALL; APPL; APPL; APPL; APPL; APPL; APPL; APPL|] 
       [| APPL; WALL; APPL; WALL; APPL; WALL; WALL; WALL; WALL; WALL; APPL; WALL; WALL; WALL; WALL; WALL; APPL; WALL; APPL; WALL; APPL|] 
       [| APPL; APPL; APPL; WALL; APPL; APPL; APPL; APPL; APPL; APPL; APPL; APPL; APPL; APPL; APPL; APPL; APPL; WALL; APPL; APPL; APPL|] 
       |]